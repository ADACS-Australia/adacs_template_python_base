//
// Once this new project is configured, you can delete this file.  See 'notes_for_developers' if you need to see this content again.
//

***Now that your template has been rendered, we recommend that you configure a few services as follows:***

## __GitHub__ (`https:/github.com`)

1. **If you haven't already, create a GitHub repo with the following:**

- account:   **{{cookiecutter.github_login}}**
- repo name: **{{cookiecutter.github_repo}}**

2. **Configure branch permissions as follows:**

- *Configure the main branch to only permit merges from pull requests*.  This can be done by clicking on the `branches` tab and clicking on the `Protect this branch` button for the `main` branch.
- *Ensure that all commits must be made to a non-protected branch and submitted via a pull request* by selecting `Require a pull request before merging`.  You may also want to specify here how many approvals are needed as well.
- *Ensure that all CI/CD tests are passing before a merge to the main branch can be made* by selecting `Require status checks to pass before merging`.

3. **Depending on which services you choose to use for this project, configure repository secrets by navigating to `Settings->Secrets->Actions` (see below for how to find the values for these):**

- If you plan to host the project documentation on *Read the Docs* then the following secrets need to be set: **RTD_WEBHOOK_TOKEN** and **RTD_WEBHOOK_URL**
- If you plan to make releases available on the *Python Package Index* (see below), then the following secret needs to be set: **PYPI_TOKEN**
- If you plan to test releases with the *Test Python Package Index*, then the following secret needs to be set: **TEST_PYPI_TOKEN**

4. Push code to GitHub

To push your new project to GitHub, run the following from within the local repo: `git push -u origin main`

## __Read the Docs__ (`https://readthedocs.org`)

**If you choose to release documentation on *Read the Docs* (RTD), configure your account as follows:**
- Ensure that your *GitHub* account has been connected.  This is done automatically if you log into RTD with your GitHub credentials.  If you logged in with your email, navigate to `<login_id>->Settings->Connected Services` by clicking on `Connect Your Accounts` and click `Connect to GitHub`.  You know your account is linked if it is listed below under `Active Services`.
- Return to your RTD landing page by clicking on your account name at the top.  Click `Import a Project`.  Your GitHub repository should be listed here (you may need to refresh the list if it has been created recently).  Import it.
- Once imported, get the value of **RTD_WEBHOOK_URL** by migrating to the `Admin->Integrations` tab on the RTD project page.  Click on `GitHub incomming webhook` and get the URL there.  Make sure it starts with `https://`; prepend this if not.
- To obtain/generate your RTD_WEBHOOK_TOKEN, navigate to <Account>->Settings->API Tokens on *Read the Docs*.  If a token has been created already, you can use it.  Otherwise (or if you want a token specifically for this project), create a new one.
- Create a *GitHub* webhook by following the directions here: `https://docs.readthedocs.io/en/stable/guides/git-integrations.html#how-to-manually-connect-your-git-repository`.

## __The Python Package Index (PyPI)__ (`https://pypi.org`)

An API token will need to be created and added to your *GitHub* project as **PYPI_TOKEN**.  This can be generated by navigating to **Account Settings->Add API Token**.  Do the same on *test.PyPI* to generate **TEST_PYPI_TOKEN**.
