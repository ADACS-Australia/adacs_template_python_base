[tool.poetry]
name = "adacs_template_python_base"
version = "0.0.0-dev" # Just a place holder; package version is managed by the dynamic-versioning plugin & git tags
description = "A Cookiecutter template for instantiating Python projects"
authors = [ "ADACS" ]
license = "MIT-expat"
readme = "README.md"
packages = [
    { include = "adacs_template_python_base", from = "python" }
]
homepage = "https://github.com/ADACS-Australia/adacs_template_python_base"
documentation = "https://adacs_template_python_base.readthedocs.io/en/latest/"

[tool.poetry.dependencies]
python = " >=3.11"
rich = "^13"
cookiecutter = "^2"

[tool.poetry.group.docs.dependencies]
Sphinx = "^6"
sphinx-rtd-theme = "^1"
sphinx-click = "^4"
sphinx-copybutton = "^0"
myst-parser = "^1"

[tool.poetry.group.test.dependencies]
pytest = "^7"
pytest-mock = "^3"
pytest-cookies = "^0"
black = "^24"
ruff = "^0"
mypy = "^1"
pre-commit = "^3"

# This configures the Poetry plugin which enables dynamic versioning via the repo tags
# Note the changes that are also needed to the [build-system] config below.
[tool.poetry-dynamic-versioning]
enable = true
vcs = "git"
style = "semver"

[tool.pytest.ini_options]
pythonpath = ["./tests", "./"] # relative to root directory
addopts = "--ignore={{cookiecutter.repo_name}}"

[tool.mypy]
ignore_missing_imports = true
mypy_path = "$MYPY_CONFIG_FILE_DIR/tests"

[tool.black]
extend-exclude = '''
^/(
    {{cookiecutter.repo_name}} # checked by pytest
  | hooks                      # These files are treated as Jinja2 templates and may have invalid Python code
)
'''

[tool.ruff]
line-length = 88 # to match Black
extend-exclude = [
  '\{\{cookiecutter.repo_name\}\}', # checked by pytest
  'hooks' # These files are treated as Jinja2 templates and may have invalid Python code
]

[tool.ruff.lint]
select = [
    "E",
    "F",
    "W",
]
ignore = [
    "E501", # line length violations (let Black handle this)
]

# Ignore `E402` (import violations) in all `__init__.py` files, and in `path/to/file.py`.
[tool.ruff.per-file-ignores]
"__init__.py" = ["E402"]

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[build-system]
requires = ["poetry-core>=1.0.0", "poetry-dynamic-versioning"]
build-backend = "poetry_dynamic_versioning.backend"
