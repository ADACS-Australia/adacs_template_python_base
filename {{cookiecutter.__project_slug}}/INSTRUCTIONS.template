***
*** Once configed, you can delete this file.  See 'notes_for_developers' if you need to see this content again.
***
Now that your template has been rendered, we recommend that you configure a few services as follows:

1. [__GitHub__](https:/github.com)

To work with this codebase, you will require a __GitHub__ account ([go here to get one](https://github.com)).  This subsection details how to configure a new repository from scratch (generally only necessary - or partially necessary - when forking to a new repository or (re)establishing a fresh project).

Creating a remote repository for an established local codebase:
	* Create a new GitHub repository for the account to host the code by
        - logging into *GitHub* and clicking the `+` selector at the very top and selecting `New repository`;
	    - Edit the form detailing the new repository and click `Create repository` at the bottom;
	* Obtain the URL for the repository you're going to use (denoted `<url>`) by clicking on the green `Code` button on the repository GitHub page;
	* Add the new *GitHub* repo as a remote repository to your local copy via `git remote add origin <url>`; and
	* Push the code to the new GitHub repository with `git push origin main`.

Branch permissions for the project repository should be configured as follows:

- Protect the main branch to only permit merges from pull requests.  This can be done by clicking on the 'branches' tab and clicking on the 'Protect this branch' button for the 'main' branch.
- Select 'Require status checks to pass before merging' when you set-up this branch protection rule.  This will ensure that all CI/CD tests pass before a merge to the main branch can be made.

Several secrets need to be configured by navigating to `Settings->Secrets->Actions` and adding the following:

- If you plan to host the project documentation on *Read the Docs** (see below) then the following secrets need to be set (see below for where to find these values):

    - **RTD_WEBHOOK_TOKEN**, and
    - **RTD_WEBHOOK_URL**

- If you plan to make code releases available on the **Python Package Index** (see below), then the following secret needs to be set (see below for where to find this value):

    - **PYPI_TOKEN**,

- If you plan to test code releases with the **Test Python Package Index** (see below), then the following secret needs to be set (see below for where to find this value):

    - **TEST_PYPI_TOKEN**,

2. [__Read the Docs__](https://readthedocs.org)

    **Read the Docs** (RTD) is used to build and host the project documentation.  An account is needed if you are an owner/maintainer of the project and will be publishing and managing the project's documentation online, but not generally needed if you are simply a contributing developer.  Configure your RTD account as follows:

    - Ensure that your *GitHub* account has been connected.  This is done automatically if
      you log into RTD with your GitHub credentials.  If you logged in with your email,
      navigate to "<login_id>->Settings->Connected Services"by clicking on "Connect Your
      Accounts" and click "Connect to GitHub".  You know your account is linked if it is
      listed below under "Active Services".

    - Return to your RTD landing page by clicking on your account name at the top.  Click 
      "Import a Project".  Your GitHub repository should be listed here (you may need to
      refresh the list if it has been created recently).  Import it.

    - Once imported, get the value of **RTD_WEBHOOK_URL** by migrating to the `Admin->Integrations` tab on the RTD project page.  Click on `GitHub incomming webhook` and get the URL there.  Make sure it starts with `https://`; prepend this if not.

    - To obtain/generate your RTD_WEBHOOK_TOKEN, navigate to <Account>->Settings->API Tokens on *Read the Docs*.  If a token
      has been created already, you can use it.  Otherwise (or if you want a token specifically for this project), create a new one.

    - Create a *GitHub* webhook by following the directions [here](https://docs.readthedocs.io/en/stable/guides/git-integrations.html#how-to-manually-connect-your-git-repository).
 
    Once properly configured, the documentation for this project should build automatically on RTD every time you generate a new release (see below for instructions).

3. The [__Python Package Index (PyPI)__](https://pypi.org)

    This service is used to publish project releases.  An account is needed if you are the owner of the project, but not generally needed if you are simply a contributing developer.  An API token will need to be created and added to your *GitHub* project as **PYPI_TOKEN** (as detailed above).  This can be generated by navigating to **Account Settings->Add API Token** 

    To test releases, a parallel account on *test.PyPI* is needed and a similar token to **PYPI_TOKEN** - named **TEST_PYPI_TOKEN** needs to be set, in the same way as above.  To create a test release, flag it as a "pre-release" through the *GitHub* interface when you generate a release, and it will be published on *test.PyPI.org* rather than *PyPI.org*.
